# Generated by Django 3.1 on 2020-10-14 08:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street1', models.CharField(max_length=50)),
                ('street2', models.CharField(blank=True, max_length=50, null=True)),
                ('zip', models.CharField(max_length=5)),
                ('city', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('device_id', models.CharField(max_length=32, unique=True)),
                ('alias', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='NodeInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_timestamp', models.PositiveIntegerField()),
                ('to_timestamp', models.PositiveIntegerField(null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='node_installations', to='core.node')),
            ],
            options={
                'ordering': ['-from_timestamp'],
                'get_latest_by': 'from_timestamp',
            },
        ),
        migrations.CreateModel(
            name='NodeProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=30, unique=True)),
                ('num_uplink_msgs', models.PositiveIntegerField(default=1)),
                ('num_downlink_msgs', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Quantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.CharField(max_length=30, unique=True)),
                ('base_unit', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sites', to='core.address')),
                ('nodes', models.ManyToManyField(through='core.NodeInstallation', to='core.Node')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_s', models.PositiveIntegerField()),
                ('co2_ppm', models.PositiveSmallIntegerField()),
                ('temperature_celsius', models.DecimalField(decimal_places=1, max_digits=3, null=True)),
                ('rel_humidity_percent', models.PositiveSmallIntegerField(null=True)),
                ('measurement_status', models.CharField(choices=[('M', 'measured value'), ('R', 'replacement value'), ('E', 'measurement error')], default='M', max_length=1)),
                ('node_ref_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='core.node')),
            ],
            options={
                'ordering': ['-timestamp_s'],
                'get_latest_by': 'order_timestamp_s',
            },
        ),
        migrations.CreateModel(
            name='NodeModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('trade_name', models.CharField(max_length=30)),
                ('manufacturer', models.CharField(max_length=30)),
                ('sensor_type', models.CharField(max_length=100)),
                ('quantities', models.ManyToManyField(related_name='node_models', to='core.Quantity')),
            ],
        ),
        migrations.AddField(
            model_name='nodeinstallation',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='node_installations', to='core.site'),
        ),
        migrations.AddField(
            model_name='node',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.nodemodel'),
        ),
        migrations.AddField(
            model_name='node',
            name='protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.nodeprotocol'),
        ),
        migrations.AddConstraint(
            model_name='address',
            constraint=models.UniqueConstraint(fields=('street1', 'street2', 'zip', 'city'), name='unique_address'),
        ),
        migrations.AddConstraint(
            model_name='site',
            constraint=models.UniqueConstraint(fields=('name', 'responsible'), name='unique_site_per_user'),
        ),
        migrations.AddConstraint(
            model_name='sample',
            constraint=models.UniqueConstraint(fields=('node_ref_id', 'timestamp_s'), name='unique_sampling_times_per_node'),
        ),
        migrations.AddConstraint(
            model_name='sample',
            constraint=models.CheckConstraint(check=models.Q(rel_humidity_percent__lte=100), name='rel_humidity_percent'),
        ),
        migrations.AddConstraint(
            model_name='sample',
            constraint=models.CheckConstraint(check=models.Q(temperature_celsius__gte=-20), name='not_too_cold'),
        ),
        migrations.AddConstraint(
            model_name='sample',
            constraint=models.CheckConstraint(check=models.Q(temperature_celsius__lte=40), name='not_too_hot'),
        ),
        migrations.AddConstraint(
            model_name='sample',
            constraint=models.CheckConstraint(check=models.Q(co2_ppm__lte=10000), name='co2_upper_limit'),
        ),
        migrations.AddConstraint(
            model_name='nodeinstallation',
            constraint=models.UniqueConstraint(fields=('node', 'from_timestamp'), name='unique_node_attribution'),
        ),
    ]
